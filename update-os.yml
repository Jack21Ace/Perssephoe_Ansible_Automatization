---
- name: Actualizar servidores Linux
  hosts: all
  become: yes
  gather_facts: yes
  tasks:
  
    - name: Configurar el intérprete de Python
      ansible.builtin.set_fact:
        ansible_python_interpreter: /usr/bin/python3

    - name: Actualizar lista de paquetes en Debian/Ubuntu
      apt:
        update_cache: yes
        cache_valid_time: 86400
      when: ansible_facts['os_family'] == "Debian"

    - name: Actualizar lista de paquetes en Rocky Linux (RHEL)
      yum:
        update_cache: yes
      when: ansible_facts['os_family'] == "RedHat"

    - name: Actualizar paquetes instalados en Debian/Ubuntu
      apt:
        upgrade: dist
      when: ansible_facts['os_family'] == "Debian"

    - name: Actualizar paquetes instalados en Rocky Linux (RHEL)
      yum:
        name: "*"
        state: latest
      when: ansible_facts['os_family'] == "RedHat"

    - name: Eliminar paquetes no utilizados en Debian/Ubuntu
      apt:
        autoremove: yes
        autoclean: yes
      when: ansible_facts['os_family'] == "Debian"

    - name: Limpiar caché de paquetes en Rocky Linux (RHEL)
      yum:
        name: "*"
        state: absent
      when: ansible_facts['os_family'] == "RedHat"

    # Comprobar si se necesita reiniciar (para Rocky Linux)
    - name: Check if reboot is required (Rocky Linux)
      command: needs-restarting -r
      register: reboot_needed
      failed_when: reboot_needed.rc not in [0, 1]
      changed_when: reboot_needed.rc == 1
      when: ansible_facts['os_family'] == "RedHat"

    - name: Reboot the server if required (Rocky Linux)
      ansible.builtin.reboot:
        msg: "Rebooting to apply updates"
        reboot_timeout: 300
      when: reboot_needed is defined and reboot_needed.rc == 1 and ansible_facts['os_family'] == "RedHat"
