---
- name: Configure PostgreSQL and install Zabbix on Rocky Linux
  hosts: Zabbix
  become: true

  vars_prompt:
    - name: "postgres_admin_password"
      prompt: "Please enter the password for the PostgreSQL superuser (postgres)"
      private: yes
    - name: "admin_user_password"
      prompt: "Please enter the password for the admin user"
      private: yes
    - name: "zabbix_db_password"
      prompt: "Please enter the password for the Zabbix database user"
      private: yes

  vars:
    admin_user: "admin"
    zabbix_db_user: "zabbix"
    zabbix_db_name: "zabbix"

  tasks:
  - name: Install PostgreSQL packages
    dnf:
      name: postgresql-server
      state: present
    tags: install

  - name: Initialize PostgreSQL database
    command: /usr/bin/postgresql-setup --initdb
    args:
      creates: /var/lib/pgsql/data/PG_VERSION
    tags: init_db

  - name: Start and enable PostgreSQL service
    service:
      name: postgresql
      state: started
      enabled: yes
    tags: service

  - name: Set PostgreSQL superuser password
    become_user: postgres
    community.postgresql.postgresql_user:
      name: postgres
      password: "{{ postgres_admin_password }}"
      state: present
    tags: config

  - name: Create PostgreSQL admin user for routine tasks
    become_user: postgres
    community.postgresql.postgresql_user:
      name: "{{ admin_user }}"
      password: "{{ admin_user_password }}"
      role_attr_flags: CREATEDB,NOSUPERUSER
      state: present
    tags: users

  - name: Create Zabbix database and user
    become_user: postgres
    community.postgresql.postgresql_db:
      name: "{{ zabbix_db_name }}"
      encoding: "UTF8"
    tags: zabbix

  - name: Create Zabbix database user
    become_user: postgres
    community.postgresql.postgresql_user:
      name: "{{ zabbix_db_user }}"
      password: "{{ zabbix_db_password }}"
      priv: "{{ zabbix_db_name }}:ALL"
      state: present
    tags: zabbix

  - name: Grant privileges to Zabbix user on Zabbix database
    become_user: postgres
    community.postgresql.postgresql_privs:
      db: "{{ zabbix_db_name }}"
      roles: "{{ zabbix_db_user }}"
      objs: public
      type: schema
      privs: "ALL"
    tags: zabbix

  - name: Install Zabbix repository
    dnf:
      name: https://repo.zabbix.com/zabbix/6.0/rhel/9/x86_64/zabbix-release-6.0-3.el9.noarch.rpm
      state: present
    tags: install

  - name: Install Zabbix server, frontend, and agent
    dnf:
      name: 
        - zabbix-server-pgsql
        - zabbix-web-pgsql
        - zabbix-agent
      state: present
    tags: install

  - name: Import Zabbix database schema
    become_user: postgres
    command: >
      psql -U {{ zabbix_db_user }} -d {{ zabbix_db_name }} -f /usr/share/zabbix-server-pgsql/schema.sql
    args:
      creates: /var/lib/pgsql/data/zabbix_schema_imported
    tags: zabbix

  - name: Import Zabbix images data
    become_user: postgres
    command: >
      psql -U {{ zabbix_db_user }} -d {{ zabbix_db_name }} -f /usr/share/zabbix-server-pgsql/images.sql
    args:
      creates: /var/lib/pgsql/data/zabbix_images_imported
    tags: zabbix

  - name: Import Zabbix data data
    become_user: postgres
    command: >
      psql -U {{ zabbix_db_user }} -d {{ zabbix_db_name }} -f /usr/share/zabbix-server-pgsql/data.sql
    args:
      creates: /var/lib/pgsql/data/zabbix_data_imported
    tags: zabbix

  - name: Configure Zabbix server to use PostgreSQL
    lineinfile:
      path: /etc/zabbix/zabbix_server.conf
      regexp: '^#? DBPassword='
      line: "DBPassword={{ zabbix_db_password }}"
    tags: config

  - name: Start and enable Zabbix server and agent
    service:
      name: "{{ item }}"
      state: started
      enabled: yes
    loop:
      - zabbix-server
      - zabbix-agent
    tags: service

  - name: Configure Zabbix to use nginx-server as web server
    lineinfile:
      path: /etc/zabbix/web/zabbix.conf.php
      regexp: "^\$DB['SERVER']"
      line: "\$DB['SERVER'] = '10.243.0.35';"
    tags: config

  - name: Ensure nginx-server is reachable from Zabbix
    ansible.builtin.wait_for:
      host: "10.243.0.35"
      port: 80
      state: started
      timeout: 30
    tags: connectivity
